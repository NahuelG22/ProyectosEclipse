/*
 * input.h
 *
 *  Created on: 21 sep. 2022
 *      Author: Nahuel A
 */

#ifndef INPUT_H_
#define INPUT_H_

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

/// @fn float promediar(int, int)
/// @brief Calcula el promedio de dos enteros
/// @param contador1 Primer contador
/// @param contador2 Segundo contador
/// @return El resultado de la division
float promediar(int contador1, int contador2);

/**
 * \brief Solicita un número al usuario y devuelve el resultado
 * \param mensaje Es el mensaje a ser mostrado
 * \return El número ingresado por el usuario
 *
 */
int getInt(char* mensaje);

/**
 * \brief Solicita un número al usuario y devuelve el resultado
 * \param mensaje Es el mensaje a ser mostrado
 * \return El número ingresado por el usuario
 *
 */
short getShort(char* mensaje);

/**
 * \brief Solicita un número al usuario y devuelve el resultado
 * \param mensaje Es el mensaje a ser mostrado
 * \return El número ingresado por el usuario
 *
 */
float getFloat(char* mensaje);


/**
 * \brief Solicita un caracter al usuario y devuelve el resultado
 * \param mensaje Es el mensaje a ser mostrado
 * \return El caracter ingresado por el usuario
 *
 */
char getChar(char* mensaje);

/**
 * \brief Solicita un texto al usuario y lo devuelve
 * \param mensaje Es el mensaje a ser mostrado
 * \param input Array donde se cargará el texto ingresado
 * \return void
 */
void getString(char mensaje[],char input[]);


/**
 * @fn int getNumberInt(char[], char[], int, int)
 * @brief Solicita un numero entero al usuario, luego de verificarlo devuelve el resultado.
 *
 * @param mensaje Es el mensaje que sera mostrado
 * @param mensajeError Es el mensaje de error que sera mostrado
 * @param minimo Es el numero limite minimo
 * @param maximo Es el numero limite maximo
 * @return El numero ingresado por el usuario
 */
int getNumberInt(char mensaje[], char mensajeError[], int minimo, int maximo);

/**
 * @fn short getNumberShort(char[], char[], short, short)
 * @brief Solicita un numero al usuario, luego de verificarlo devuelve el resultado.
 *
 * @param mensaje Es el mensaje que sera mostrado
 * @param mensajeError Es el mensaje de error que sera mostrado
 * @param minimo Es el numero limite minimo
 * @param maximo Es el numero limite maximo
 * @return El numero ingresado por el usuario
 */
short getNumberShort(char mensaje[], char mensajeError[], short minimo, short maximo);

/**
 * @fn float getNumberFloat(char[], char[], float, float)
 * @brief Solicita un numero flotante al usuario, luego de verificarlo devuelve el resultado.
 *
 * @param mensaje Es el mensaje que sera mostrado
 * @param mensajeError Es el mensaje de error que sera mostrado
 * @param minimo Es el numero limite minimo
 * @param maximo Es el numero limite maximo
 * @return El numero ingresado por el usuario
 */
float getNumberFloat(char mensaje[], char mensajeError[], float minimo, float maximo);

/**
 * @fn int GetString(char[], int, char[])
 * @brief Solicita un texto al usuario y retorna si pudo obtener la cadena
 *
 * @param cadena En donde se guardara la cadena de texto
 * @param len Tamaño de la cadena de texto
 * @param mensaje Es el mensaje a ser mostrado
 * @return Si se copiar la cadena o no
 */
int GetString(char cadena[], int len, char mensaje[]);

#endif /* INPUT_H_ */
